name: NuGet Packages to Artifactory

on:
  push:
    branches:
      - main
      - release/*
  pull_request:
    branches:
      - main
      - release/*

env:
  TAG_PREFIX: ${{ github.head_ref || github.ref_name }}
  NUGET_SCRATCH: 'local-omni-nuget-scratch'
  NUGET_STABLE: 'local-omni-nuget-stable'
  NUGET_RELEASE: 'local-omni-nuget-release'
  
jobs:
  build:
    name: Build NuGet Package
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      # - name: Install gRPC tools
      #   run: sudo apt-get install -y protobuf-compiler-grpc
          
      - name: Make publish.ps1 executable
        run: chmod +x ./scripts/publish.ps1

      - name: Build and Create NuGet Package
        shell: pwsh
        run: ./scripts/publish.ps1
      
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: publishedApp
          path: .

  deploy:
    name: 'Publish Nuget Scratch'
    runs-on: ubuntu-latest
    needs: build
    environment: scratch
    steps:
        - name: Download a Build Artifact
          uses: actions/download-artifact@v2.1.1
          with:
            name: publishedApp
        
        - uses: jfrog/setup-jfrog-cli@v3
          env:
            JF_URL: https://artifacts.radai.com/
            JF_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_PASSWORD_WRITE }}
        
        - name: Push to Artifactory
          run: |
            export repos=("${{ env.NUGET_SCRATCH }}")
            
            if [[ "${{ github.event_name }}" == 'push' ]]; then
              repos+=("${{ env.NUGET_STABLE }}")
              if [[ "${{ github.head_ref }}" != 'main' ]]; then
                repos+=("${{ env.NUGET_RELEASE }}")
              fi
            fi
            
            for repo in "${repos[@]}"; do
              echo "Pushing NuGet package to ${repo}..."
              export NUGET_REPO="${repo}"
              envsubst < .github/workflows/upload-spec.json > upload-spec.json
              jf c add "${NUGET_REPO}" --interactive=false
              jf rt u --spec=upload-spec.json
            done